#!/bin/bash

OPT=$1                                        # 'start/restart'   
COSMO_MODEL=e1                                # Cosmology model

# Multifluid ------------------------------------------------------------------------------------- 

OUTPUT_Z="99 0"                               # Output redshifts for the MultiFluid run
OUTPUT_NL=0
OUTPUT_PRINT=2

# N-body   --------------------------------------------------------------------------------------- 

NPARTS=512                                    # Number of CDM particles
ZIN=99.0                                      # Initial redshift in gadget
BOXSIZE=256.0                                 # BoxSize for gadget in Mpc/h
SOFT=0.04                                     # Softening length in units of BoxSize/Ngrid
OUTPUT_G="99 3 1 0"                           # Gadget snapshot output redshifts 
LR_HDM=2                                      # Linear response type: 1 SE, 2 MF, 3 GSE

# Hybrid N-body -------------------------------------------------------------------------------- 

ROOT_IN=output
ROOT_OUT=output_c1
SNAP=0                                        # Snapshot taken as IC
CTYPE=1                                       # Conversion particle type (after PTYPE=1)
NSTREAMS=1			              # Number of streams converted as particles
ISTREAM=1                                     # First of the NSTREAMS to be converted, first overall is 1
MULTI=0                                       # Multiple conversions,  0: no, 1: yes

# Post ------------------------------------------------------------------------------------------- 

DIR=run_512/ax2_0                             # Simulation directory to analyse
PP=0                                          # Option:
                                              # 0: Save smoothed+raw particle spectra at z=0

############################################################################################
 

cdir=$(pwd)
source scripts/cosmologies.sh $COSMO_MODEL

case $OPT in

    start)

        EXEC_CLASS=./class
        EXEC_MF=./MultiFluid
        
        CLASS_ROOT=$(grep 'root' class_template.ini | sed -n 2p | awk '{print $3}' | awk -F"/" '{print $1}')
        mkdir -p $CLASS_ROOT
        
        echo ''
        echo 'Starting simulation with model' $COSMO_MODEL 
        source scripts/cosmofiles.sh  # Create mf file, modify .ini file to match cosmology 
        echo ''

        echo 'Running class ...'
        (time ${EXEC_CLASS} input_class_${COSMO_MODEL}.ini) >& info/output_class_${COSMO_MODEL}.txt
        echo 'Done!'
        
        NK=$(grep "NK" info/log.txt | awk '{print $3}') 
        N_MU=$(grep "N_MU" info/log.txt | sed -n 1p | awk '{print $3}') 
        N_TAU=$(grep "N_TAU" info/log.txt |  sed -n 1p | awk '{print $3}') 
        
        echo ''
        echo 'Running MuFLR ...'
        (time ${EXEC_MF} ./params_MF.dat ) >& mf_data/MuFLR_${COSMO_MODEL}_Ntau${N_TAU}_Nmu${N_MU}.txt
        echo 'Done!'
        
        INPUT=mf_data/MuFLR_${COSMO_MODEL}_Ntau${N_TAU}_Nmu${N_MU}.txt
        OUTPUT_BASE=${COSMO_MODEL}_Ntau${N_TAU}_Nmu${N_MU}
        
        LI=$(cat $INPUT | grep "momenta" | awk -F': ' '{print $3}')
        LLI=$(cat $INPUT | grep "momenta" | awk -F': ' '{print $3}' | awk '{print NF}' )

        touch tau_table.txt
        for ((I=0; I<${LLI}; I++)); do
            echo $LI | awk -v j=$(echo $I+1 | bc) '{print $j}' | awk '{printf("%.9f\n",$1)}' >> tau_table.txt
        done

        NZ=$(echo $(grep "^[0-9]" ${INPUT} | wc -l) "/${NK}" | bc)

        for ((IZ=0; IZ<${NZ}; IZ++)); do
            NH=$(echo "(1+${IZ})*${NK}" | bc)
            ZH=$(echo $OUTPUT_Z | awk -v j=$(echo $IZ+1 | bc) '{print $j}')
            grep "^[0-9]" ${INPUT} | head -${NH} | tail -${NK} | awk '{print $1, $2}' > ${OUTPUT_BASE}_z${ZH}_Pk.txt
            grep "^[0-9]" ${INPUT} | head -${NH} | tail -${NK} | awk '{print $1, $3/$2}' > ${OUTPUT_BASE}_z${ZH}_f.txt
            if [[ $IZ -gt 0 ]]; then
                mv ${OUTPUT_BASE}_z${ZH}_Pk.txt ${OUTPUT_BASE}_z${ZH}_f.txt mf_data
            fi
        done
        echo ''
        echo 'Setting files for Gadget ...'

        if test -f "outputs.txt"; then
            rm outputs.txt
        fi
        touch outputs.txt
        NR=$(echo $OUTPUT_G | awk '{print NF}')
        for ((IZ=0; IZ<${NR}; IZ++)); do
            AO=$(echo $OUTPUT_G | awk -v j=$(echo $IZ+1 | bc) '{print $j}' | awk '{printf("%.5f\n",1/(1+$1))}')
            echo $AO >> outputs.txt
        done
        
        SEL_RED=$(echo $OUTPUT_Z | awk '{print $1}') 
        PK_FILE=${OUTPUT_BASE}_z${SEL_RED}_Pk.txt
        THK_FILE=${OUTPUT_BASE}_z${SEL_RED}_f.txt
        COSMO_OL=$(echo 1 - $COSMO_OM | bc | awk '{printf("%.4f",$0)}')    
        COSMO_OMM=$(echo $COSMO_OM - $COSMO_OH | bc | awk '{printf("%.4f",$0)}')    
        AIN=$(echo $ZIN | awk '{print 1/(1+$1)}')
        SOFT_LENGTH=$(echo "scale=4; $SOFT*$BOXSIZE/$NPARTS" | bc -l)

        if test -f "param.txt"; then
            rm param.txt
        fi
  
        sed -e s/TEMPLATE_P_ZIN/${AIN}/g \
            -e s/TEMPLATE_P_OM/${COSMO_OMM}/g \
            -e s/TEMPLATE_P_OL/${COSMO_OL}/g \
            -e s/TEMPLATE_P_OB/${COSMO_OB}/g \
            -e s/TEMPLATE_P_OH/${COSMO_OH}/g \
            -e s/TEMPLATE_P_H0/${COSMO_H0}/g \
            -e s/TEMPLATE_P_SIG8/${COSMO_SIG8}/g \
            -e s/TEMPLATE_P_BOXSIZE/${BOXSIZE}/g \
            -e s/TEMPLATE_P_SOFT/${SOFT_LENGTH}/g \
            -e s/TEMPLATE_P_NUMPARTS/${NPARTS}/g \
            -e s/TEMPLATE_P_MASSHDM/${COSMO_MHDM}/g \
            -e s/TEMPLATE_P_NLR/${LR_HDM}/g \
            -e s/TEMPLATE_POWERSPECTRUM/${PK_FILE}/g \
            -e s/TEMPLATE_GROWTHRATE/${THK_FILE}/g param_template.txt > param.txt
        
        echo 'param.txt file is ready, check to be sure!!'
        sleep 1
        ;;
    
    restart) 

        echo 'Restart Hybrid simulation in folder' $ROOT_OUT 
        
        SNAPN=$(printf "%03d" $SNAP)
        ICFILE=$ROOT_IN/snapshot_$SNAPN
        NEWT=$(h5dump -a Header/Time $ROOT_IN/snapshot_$SNAPN.hdf5 | grep "(0)" | awk '{print $2}')    
        SOFT_LENGTH=$(echo "scale=4; $SOFT*$BOXSIZE/$NPARTS" | bc -l)
        TOT_STREAMS=$(cat tau_table.txt | wc -l)
        COSMO_OL=$(echo 1 - $COSMO_OM | bc | awk '{printf("%.4f",$0)}')    
        COSMO_OMM=$(echo $COSMO_OM - $COSMO_OH | bc | awk '{printf("%.4f",$0)}')    
        
        AFI=1
        if [[ $MULTI == 1 ]]; then
            AFI=$(echo $OUTPUT_G | awk -v j=$(echo $CTYPE + 1 | bc) '{print $j}' | awk '{printf("%.6f\n", 1/(1+$1))}')
        fi
         
        #if [ ! -f "hdm_omega.txt" ]; then
        #    BUF=$(python3 scripts/hdm_budget.py 0 $TOT_STREAMS $COSMO_OH $NSTREAMS $CTYPE)
        #    COSMO_OHL=$(echo $BUF | awk '{print $1}')
        #    COSMO_OHP=$(echo $BUF | awk '{print $2}')
        #else
        #    BUF=$(python3 scripts/hdm_budget.py 1 $TOT_STREAMS $COSMO_OH $NSTREAMS $CTYPE)
        #    COSMO_OHL=$(echo $BUF | awk '{print $1}')
        #    COSMO_OHP=$(echo $BUF | awk '{print $2}')
        #fi
        
        if [ ! -f "hdm_omega.txt" ]; then
            tot=$(awk '{sum+=$NF} END {print sum}' omega_table.txt)
            awk -v x=0 -v tt=$tot '{ for (i=1; i<=NF; i++) {x+=$i}; printf "%.8f %.8f\n", x, tt-x}' omega_table.txt > hdm_omega.txt
        fi
        
        COSMO_OHL=$(awk -v ST=$ISTREAM 'FNR == ST {print $2}' hdm_omega.txt)
        COSMO_OHP=$(awk -v ST=$ISTREAM 'FNR == ST {print $1}' hdm_omega.txt)
            

        if [ ! -f "vel_list_full.txt" ]; then 
            touch vel_list_full.txt
            C=299792.458
            awk -v M=$COSMO_MHDM -v C=$C '{print $1*C/M}' tau_table.txt > vel_list_full.txt 
        fi
        
        MIN=$ISTREAM
        MAX=$(echo $NSTREAMS+$ISTREAM-1 | bc)
        cat vel_list_full.txt | awk -v m=$MIN -v M=$MAX 'NR >=m && NR <=M {print}' > vel_list_$CTYPE.txt
        VLIST_FILE=vel_list_$CTYPE.txt
        
        CONVN=$(printf "%03d" $CTYPE)
        python3 scripts/hybrid_files.py $ROOT_IN $SNAP $NSTREAMS $ISTREAM $CTYPE
        PK_FILE=PSFile_c$CONVN.txt
        GR_FILE=GRFile_c$CONVN.txt
        CB_FILE=CBFile_c$CONVN.txt

        SCALE=$(printf "%.3f" $NEWT)
        YNU_FILE=$ROOT_IN/y_nu/y_nu_$SCALE.dat
        DELTA_FILE=$ROOT_IN/delta_grid/delta_grid_$SCALE.dat

        if [ -f "param_restart.txt" ]; then
            rm param_restart.txt
            touch param_restart.txt
        fi
        
        sed -e "s|TEMPLATE_P_ICFILE|${ICFILE}|g" \
            -e "s|TEMPLATE_P_OUTDIR|${ROOT_OUT}|g" \
            -e "s|TEMPLATE_P_ZIN|${NEWT}|g" \
            -e "s|TEMPLATE_P_ZFI|${AFI}|g" \
            -e "s|TEMPLATE_P_OM|${COSMO_OMM}|g" \
            -e "s|TEMPLATE_P_OL|${COSMO_OL}|g" \
            -e "s|TEMPLATE_P_OB|${COSMO_OB}|g" \
            -e "s|TEMPLATE_P_OH|${COSMO_OHL}|g" \
            -e "s|TEMPLATE_P_OP|${COSMO_OHP}|g" \
            -e "s|TEMPLATE_P_H0|${COSMO_H0}|g" \
            -e "s|TEMPLATE_P_BOXSIZE|${BOXSIZE}|g" \
            -e "s|TEMPLATE_P_NUMPARTS|${NPARTS}|g" \
            -e "s|TEMPLATE_P_MASSHDM|${COSMO_MHDM}|g" \
            -e "s|TEMPLATE_P_NLR|${LR_HDM}|g" \
            -e "s|TEMPLATE_P_SOFT|${SOFT_LENGTH}|g" \
            -e "s|TEMPLATE_P_HDMPART|${CTYPE}|g" \
            -e "s|TEMPLATE_P_PARTDEG|${NSTREAMS}|g" \
            -e "s|TEMPLATE_VLIST|${VLIST_FILE}|g" \
            -e "s|TEMPLATE_CBSPECTRUM|${CB_FILE}|g" \
            -e "s|TEMPLATE_POWERSPECTRUM|${PK_FILE}|g" \
            -e "s|TEMPLATE_GROWTHRATE|${GR_FILE}|g" \
            -e "s|TEMPLATE_YNU|${YNU_FILE}|g" \
            -e "s|TEMPLATE_DELTAGRID|${DELTA_FILE}|g" param_restart_template.txt >> param_restart.txt
        
        echo 'param_restart.txt file is ready, check to be sure!!'
        sleep 1
        ;;

    mf_restart)

        # Add ynu to params of MFLR simulation
        # ....
        ;;

    postprocess)

        # Under development
    
        #mkdir -p postprocess
        #mkdir -p postprocess/plots 

        #echo 'Post-processing simulations from folder' $DIR

        #python3 scripts/post.py $PP $DIR 
        ;;
esac

