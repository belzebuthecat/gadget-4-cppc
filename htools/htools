#!/bin/bash

############################################################################################
# Main options
OPT=$1                           # 'start'           (LR/GLR/MF/HYB)
                                 # 'restart'         (MF/HYB)
                                 # 'postprocess'     (LR/GLR/MF/HYB)

TYPE=1                           # 1: SELR, 2: MFLR, 3: GLR, 4: HYB
SIMFOLDER='output'               # Output of simulation to consider 

# Cosmology --------------------------------------------------------------------------------

COSMO_MODEL=nu05                 # Cosmology model
COSMO_MHDM=0.15                  # HDM mass
COSMO_THDMK=1.95280830923360     # HDM component temperature today in K
COSMO_FHDM=psd/f_fd0.dat         # HDM distribution function to pass for GLR
COSMO_NS=0.9665                  # Primordial spectral index n_s
COSMO_SIG8=0.7139                # Sigma8
COSMO_H0=0.6766                  # Hubble paramter today in units of 100 km/s/Mpc
COSMO_OM=0.309641441545506       # Omega_m for all matter
COSMO_OB=0.0489746816186967      # Omega_b for baryons
COSMO_OH=0.0109220967035452      # Omega_h for the HDM component
COSMO_TCMBK=2.7255               # CMB temperature today in K
COSMO_W0=-1.0                    # Dark energy equation of state 
COSMO_WA=0.0                     # ??

# Class ------------------------------------------------------------------------------------

CLASS_RES=0                      # Class precision 0: Low, 1: High

# Multifluid -------------------------------------------------------------------------------

OUTPUT_Z="99 19 9 5 0"
OUTPUT_NL=0
OUTPUT_PRINT=2

# Gadget-4 ---------------------------------------------------------------------------------

NPARTS=512                       # Number of CDM particles
ZIN=99.0                         # Initial redshift in gadget
BOXSIZE=512.0                    # BoxSize for gadget in Mpc/h
OUTPUT_G="49 19 9 5 3 2 1 0"     # Gadget snapshot output redshifts 
LIN_HDM=1                        # NLR for linear neutrinos/hdm

############################################################################################
# TO DO

#MfIn='MuFLR_params'             # Generates MuFLR input file, placed in inifiles,           
#MfOut='MuFLR_out'               # Output of MuFLR result, will go in raw_files,              
#PrintOpt=0                      # Print options. 0: D_cb, f, neutrino density,                

# Opts for preprocessing
#PkOut='PowerSpectrum'           # Filename for PowerSpectrumFile in param.txt,              
#GFOut='GrowthRate'              # Filename for GrowthRateFile in param.txt,                 
#CBOut='CBPowerSpectrum'         # Filename for CBPowerSpectrumFile in param.txt,                  

#snap_number=1                   # Select a snapshot to restart from or postprocess           
#aRes=0.198                      # Scale factor for Hybrid restart, .3f format!              
#iStream=0                       # First stream to covert                      
#Streams=10                      # Streams to convert                  
#mass=0.31                       # Neutrino mass in eV                                        

# Opts  for postprocessing
#pindex=0                        # 0: Projection plot 
                                # 1: Power spectra (delta, velocity, momentum) per ptype
                                # 2: Neutrino combined spectra 

#ptype=1                         # Particle type

############################################################################################
############################################################################################
 

cdir=$(pwd)

case $OPT in

    start)

    EXEC_CLASS=./class
    EXEC_MF=./MuFLR
    
    CLASS_ROOT=$(grep 'root' class_template_LR.ini | sed -n 2p | awk '{print $3}' | awk -F"/" '{print $1}')
    mkdir -p $CLASS_ROOT
    
    echo ''
    echo 'Starting simulation with model' $COSMO_MODEL 
    source scripts/cosmofiles.sh  $CLASS_RES # Create mf file, modify .ini file to match cosmology 
    echo ''

    echo 'Running class ...'
    (time ${EXEC_CLASS} input_class_${COSMO_MODEL}.ini) >& info/output_class_${COSMO_MODEL}.txt
    echo 'Done!'
    
    NK=$(grep "NK" info/log.txt | awk '{print $3}') 
    N_MU=$(grep "N_MU" info/log.txt | awk '{print $3}') 
    N_TAU=$(grep "N_TAU" info/log.txt | awk '{print $3}') 
    
    echo ''
    echo 'Running MuFLR ...'
    (time ${EXEC_MF} ./params_MuFLR-HDM.dat ) >& mf_data/MuFLR_${COSMO_MODEL}_Ntau${N_TAU}_Nmu${N_MU}.txt
    echo 'Done!'
    
    INPUT=mf_data/MuFLR_${COSMO_MODEL}_Ntau${N_TAU}_Nmu${N_MU}.txt
    OUTPUT_BASE=${COSMO_MODEL}_Ntau${N_TAU}_Nmu${N_MU}
    
    LI=$(cat $INPUT | grep "momenta" | awk -F': ' '{print $3}')
    LLI=$(cat $INPUT | grep "momenta" | awk -F': ' '{print $3}' | awk '{print NF}' )

    touch tau_table.txt
    for ((I=0; I<${LLI}; I++)); do
        echo $LI | awk -v j=$(echo $I+1 | bc) '{print $j}' | awk '{printf("%.9f\n",$1)}' >> tau_table.txt
    done

    NZ=$(echo $(grep "^[0-9]" ${INPUT} | wc -l) "/${NK}" | bc)

    for ((IZ=0; IZ<${NZ}; IZ++)); do
        NH=$(echo "(1+${IZ})*${NK}" | bc)
        ZH=$(echo $OUTPUT_Z | awk -v j=$(echo $IZ+1 | bc) '{print $j}')
        grep "^[0-9]" ${INPUT} | head -${NH} | tail -${NK} | awk '{print $1, $2}' > ${OUTPUT_BASE}_z${ZH}_Pk.txt
        grep "^[0-9]" ${INPUT} | head -${NH} | tail -${NK} | awk '{print $1, $3/$2}' > ${OUTPUT_BASE}_z${ZH}_f.txt
        if [[ $IZ -gt 0 ]]; then
            mv ${OUTPUT_BASE}_z${ZH}_Pk.txt ${OUTPUT_BASE}_z${ZH}_f.txt mf_data
        fi
    done
    echo ''
    echo 'Setting files for Gadget ...'
    
    touch outputs.txt
    NR=$(echo $OUTPUT_G | awk '{print NF}')
    for ((IZ=0; IZ<${NR}; IZ++)); do
        AO=$(echo $OUTPUT_G | awk -v j=$(echo $IZ+1 | bc) '{print $j}' | awk '{printf("%.5f\n",1/(1+$1))}')
        echo $AO >> outputs.txt
    done
    
    SEL_RED=$(echo $OUTPUT_Z | awk '{print $1}') 
    PK_FILE=${OUTPUT_BASE}_z${SEL_RED}_Pk.txt
    THK_FILE=${OUTPUT_BASE}_z${SEL_RED}_f.txt
    COSMO_OL=$(echo 1 - $COSMO_OM | bc | awk '{printf("%.4f",$0)}')    
    AIN=$(echo $ZIN | awk '{print 1/(1+$1)}')

    sed -e s/TEMPLATE_P_ZIN/${AIN}/ \
        -e s/TEMPLATE_P_OM/${COSMO_OM}/ \
        -e s/TEMPLATE_P_OL/${COSMO_OL}/ \
        -e s/TEMPLATE_P_OB/${COSMO_OB}/ \
        -e s/TEMPLATE_P_OH/${COSMO_OH}/ \
        -e s/TEMPLATE_P_H0/${COSMO_H0}/ \
        -e s/TEMPLATE_P_SIG8/${COSMO_SIG8}/ \
        -e s/TEMPLATE_P_BOXSIZE/${BOXSIZE}/ \
        -e s/TEMPLATE_P_NUMPARTS/${NPARTS}/ \
        -e s/TEMPLATE_P_NUMHDM/${COSMO_GHDM}/ \
        -e s/TEMPLATE_P_NLR/${LIN_HDM}/ \
        -e s/TEMPLATE_POWERSPECTRUM/${PK_FILE}/ \
        -e s/TEMPLATE_GROWTHRATE/${THK_FILE}/ param_template.txt > param.txt
    
    echo 'Param.txt file is ready, check to be sure!!'
    sleep 1
    echo 'Ready to qsub gadget-run'
    ;;
    
    restart) 
    echo 'Restart Hybrid simulation in folder' $SimFolder

    #NuDelta=$SimFolder/neutrino_stream_data/neutrino_delta_stream_$aRes.csv
    #NuTheta=$SimFolder/neutrino_stream_data/neutrino_theta_stream_$aRes.csv
    #PowerSpectrum=$SimFolder/powerspecs/powerspec_00$snap_number.txt
    
    #python3 scripts/pre_restart.py -sf $SimFolder -pk $PkOut -gr $GFOut -cb $CBOut -id $NuDelta -it $NuTheta -icb $PowerSpectrum -str $Stream -Ns $NumStreams
    
    #c=299792458
    #tau=$(sed -n '1p' $SimFolder/$MfOut.txt | awk '{print $4}')
    #Stream_Vel=$(echo "$tau/$mass*$c/1000 " | bc -l)
    #echo 'Set stream velocity in the param.txt file as '$Stream_Vel '(km/s)'
    
    ;;

    postprocess)
    #mkdir -p postprocess 
    #mkdir -p postprocess/plots postprocess/spectra postprocess/render
    #echo 'Post-processing simulation from folder' $SimFolder
    
    #python3 scripts/post.py -sf $SimFolder -pt $ptype  -sf $SimFolder -pp $pindex -sa $snap_number 
    
    #case $pindex in
    #    0)
    #        python3 scripts/post.py -sf $SimFolder -pt $ptype  -sf $SimFolder -pp $pindex -sa $snap_number 
    #    ;;
    #    1)
    #        python3 scripts/post.py -sf $SimFolder -pp $pindex -sa $snap_number 
    #    ;;
    #esac
    ;;
esac

